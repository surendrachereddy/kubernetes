
============================================================================================================

Basic Commands:
----------

All Pods              -> kubectl get pods
Namespace Kube-system -> kubectl get pods -n kube-system
Everything            -> kubectl get all
Describe              -> kubectl describe pod myapp-pod
Create a object       -> Kubectl apply -f filename.yaml
Edit a Object         -> Kubectl edit -f filename.yaml

============================================================================================================

ReplicaSet:
----------

Create               -> kubectl create –f replicaset-definition.yml
Get                  -> kubectl get replicaset
Delete               -> kubectl delete replicaset myapp-replicaset    *Also deletes all underlying PODs
Scale                -> kubectl replace -f replicaset-definition.yml
Scale                -> kubectl scale –replicas=6 -f replicaset-definition.yml

============================================================================================================

Deployment:
----------

Create               -> kubectl create –f deployment-definition.yml
Get                  -> kubectl get deployments
Rollout Status       -> kubectl rollout status deployment/myapp-deployment
Rollout History      -> kubectl rollout history deployment/myapp-deployment
Undo Deployment      -> kubectl rollout undo deployment/myapp-deployment

============================================================================================================

NameSpace:
---------

Namespace Kube-system   -> kubectl get pods -n kube-system or kubectl get pods --namespace=kube-system
All Namespaces          -> kubectl get pods --all-namespaces
                        -> kubectl get namespace
Create a NameSpace      -> kubectl create -f file.yaml
Create a object         -> Kubectl apply -f filename.yaml -n dev (this will create a Object in dev Namespace)

Default Namepace  is    -> Kubectl config set-context ${Kubectl config current-context} --namespace=dev
default-namespace.To
switch namespace on demand

To Allocate Resource    -> see compute yaml
to a namespace

NameSpace Format        -> db-service.dev.svc.cluster.local
                        -> ServiceName. NameSpaceName.Service.Domain

============================================================================================================

Service:
---------
NodePort              -> Service listens to a port on Node and Forwards Requests to Underlying Pods
                         i.e it makes internal Pod Accessible to Node

ClusterIP             -> Service Creates a Virtual IP inside Cluster for Communication between services

LoadBalancer          -> It Provisions a Loadbalancer for Cluster-based on Cloud-Provider

Get                   -> kubectl get services or sv

============================================================================================================
